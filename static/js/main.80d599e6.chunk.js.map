{"version":3,"sources":["static/placeholder.png","serviceWorker.ts","components/sections/front/FrontSection.tsx","components/navigation/Navigation.tsx","components/sections/about/About.tsx","components/repository/Repository.tsx","components/sections/work/Work.tsx","components/project/Project.tsx","projects.ts","components/sections/projects/Projects.tsx","components/footer/Footer.tsx","index.tsx","components/app/App.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","FrontSection","className","Navigation","Navbar","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","About","Repository","repository","Card","onClick","handleClick","url","Img","style","height","src","placeholder","Body","Title","name","Text","description","Footer","language","Work","useState","loading","setLoading","projects","setProjects","useEffect","a","fetch","response","json","data","converted","slice","map","project","html_url","console","log","fetchProjects","Spinner","animation","role","CardColumns","key","Project","margin","image","background","color","border","Projects","Date","getFullYear","title","icon","faGithub","size","faMailBulk","faLinkedin","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.80d599e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.6a9d678d.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import './style.scss';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nexport const FrontSection: FunctionComponent = () => {\r\n    return (\r\n        <section className=\"intro d-flex align-items-center\">\r\n            <div className=\"container text-center text-white left-side\">\r\n                <h1 className=\"intro-left\">Hi, I'm</h1>\r\n                <h1 className=\"intro-left intro-name\">Corné Eggebeen.</h1>\r\n            </div>\r\n            <div className=\"container text-center right-side text-wrap ml-4\">\r\n                <h1 className=\"intro-right\">\r\n                    A developer who is interested in the latest technologies.\r\n                </h1>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n","import './style.scss';\r\nimport React, { FunctionComponent } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport const Navigation: FunctionComponent = () => {\r\n    return (\r\n        <Navbar variant=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">Corné Eggebeen</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Nav.Link href=\"#about\">ABOUT ME</Nav.Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Nav.Link href=\"#work\">MY WORK</Nav.Link>\r\n                    </li>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n","import './style.scss';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nexport const About: FunctionComponent = () => {\r\n    return (\r\n        <section className=\"about-section\" id=\"about\">\r\n            <div className=\"container-fluid about-me text-center\">\r\n                <h1 className=\"pt-5\">About Me</h1>\r\n                <hr />\r\n                <p>\r\n                    I am Corné Eggebeen, currently studying Informatics / Software Engineering at\r\n                    Avans University of Applied Sciences.\r\n                </p>\r\n                <p>Have a look at my work and contact me if you are interested.</p>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { IRepository } from '../../types';\r\nimport Card from 'react-bootstrap/Card';\r\nimport placeholder from '../../static/placeholder.png';\r\n\r\ninterface IProps {\r\n    repository: IRepository;\r\n}\r\n\r\nexport const Repository: FunctionComponent<IProps> = ({ repository }) => {\r\n    return (\r\n        <Card className=\"mb-5\" onClick={() => handleClick(repository.url)}>\r\n            <Card.Img style={{ height: '15rem' }} variant=\"top\" src={placeholder} />\r\n            <Card.Body style={{ height: '10rem' }}>\r\n                <Card.Title>{repository.name}</Card.Title>\r\n                <Card.Text>{repository.description}</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <small className=\"text-muted\">{repository.language}</small>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst handleClick = (location: string) => (window.location.href = location);\r\n","import './style.scss';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport React, { useState, useEffect, FunctionComponent } from 'react';\r\nimport { IRepository } from '../../../types';\r\nimport { Repository } from '../../repository/Repository';\r\n\r\nexport const Work: FunctionComponent = () => {\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [projects, setProjects] = useState<IRepository[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProjects = async () => {\r\n            try {\r\n                const response = await fetch('https://api.github.com/users/cornayy/repos');\r\n                const data = await response.json();\r\n                const converted = data.slice(0, 6).map((project: any) => {\r\n                    return {\r\n                        name: project.name,\r\n                        language: project.language,\r\n                        description: project.description,\r\n                        url: project.html_url,\r\n                    };\r\n                });\r\n\r\n                setProjects(converted);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.log(`Github data could not be retrieved, error: ${err}.`);\r\n            }\r\n        };\r\n\r\n        fetchProjects();\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"work-section\" id=\"work\">\r\n            <div className=\"container-fluid work text-center pb-5\">\r\n                <h1 className=\"pt-5\">My Work</h1>\r\n                <hr />\r\n                <p className=\"pb-5\">Check out the projects I have done on GitHub!</p>\r\n                {loading ? (\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                ) : (\r\n                    <CardColumns>\r\n                        {projects.map(project => (\r\n                            <Repository key={project.name} repository={project} />\r\n                        ))}\r\n                    </CardColumns>\r\n                )}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n","import './style.scss';\r\nimport React, { FunctionComponent } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { IProject } from '../../types';\r\n\r\ninterface IProps {\r\n    project: IProject;\r\n}\r\n\r\nexport const Project: FunctionComponent<IProps> = ({ project }) => {\r\n    return (\r\n        <Card onClick={() => handleClick(project.url)} style={{ margin: '2rem' }}>\r\n            <Card.Img src={project.image} />\r\n            <Card.Footer\r\n                style={{\r\n                    background: 'rgba(39, 38, 38, 0.91)',\r\n                    color: 'whitesmoke',\r\n                    border: 'none',\r\n                }}\r\n            >\r\n                <summary>{project.name}</summary>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst handleClick = (location: string) => (window.location.href = location);\r\n","import { IProject } from './types';\r\n\r\nexport const projects: IProject[] = [\r\n    {\r\n        url: 'https://www.andreeggebeen.nl/',\r\n        name: 'André Eggebeen Woning-en Projectstoffering',\r\n        image: 'https://www.andreeggebeen.nl/img/intro-bg.jpg',\r\n    },\r\n    {\r\n        url: 'https://www.diez.nl',\r\n        name: 'DIÈZ',\r\n        image: 'https://diez.nl/public//images/home-images/DIEZ%203_1590574741.jpg'\r\n    }\r\n];\r\n","import './style.scss';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { Project } from '../../project/Project';\r\nimport { projects } from '../../../projects';\r\n\r\nexport const Projects: FunctionComponent = () => {\r\n    return (\r\n        <section className=\"projects-section\">\r\n            <div className=\"container-fluid projects text-center\">\r\n                <h1 className=\"pt-5\">Projects</h1>\r\n                <hr />\r\n                <div className=\"row justify-content-center mt-5\">\r\n                    {projects.map(project => (\r\n                        <Project key={project.name} project={project} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n","import './style.scss';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMailBulk } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport const Footer: FunctionComponent = () => {\r\n    return (\r\n        <footer className=\"page-footer font-small\">\r\n            <div className=\"container-fluid light-dark\">\r\n                <div className=\"row text-center\"></div>\r\n            </div>\r\n\r\n            <div className=\"footer-copyright text-center p-4 dark\">\r\n                <div className=\"col-xl-12 mt-5\">\r\n                    <p className=\"mt-5 mb-5 footer-text\">\r\n                        Copyright © {new Date().getFullYear()} | <b>Corné Eggebeen</b>\r\n                    </p>\r\n                    <div className=\"mb-5 flex-center\">\r\n                        <a className=\"contact-icon\" href=\"https://github.com/Cornayy\">\r\n                            <FontAwesomeIcon\r\n                                title=\"GitHub\"\r\n                                icon={faGithub}\r\n                                size=\"2x\"\r\n                                style={{ color: 'white' }}\r\n                            />\r\n                        </a>\r\n                        <a className=\"contact-icon\" href=\"mailto:corneeggebeen@outlook.com\">\r\n                            <FontAwesomeIcon\r\n                                title=\"Mail\"\r\n                                icon={faMailBulk}\r\n                                size=\"2x\"\r\n                                style={{ color: 'white' }}\r\n                            />\r\n                        </a>\r\n                        <a\r\n                            className=\"contact-icon \"\r\n                            href=\"https://www.linkedin.com/in/corn%C3%A9-eggebeen-970058146/\"\r\n                            title=\"LinkedIn\"\r\n                        >\r\n                            <FontAwesomeIcon\r\n                                title=\"LinkedIn\"\r\n                                icon={faLinkedin}\r\n                                size=\"2x\"\r\n                                style={{ color: 'white' }}\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/app/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import './style.css';\r\nimport './general.scss';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { FrontSection } from '../sections/front/FrontSection';\r\nimport { Navigation } from '../navigation/Navigation';\r\nimport { About } from '../sections/about/About';\r\nimport { Work } from '../sections/work/Work';\r\nimport { Projects } from '../sections/projects/Projects';\r\nimport { Footer } from '../footer/Footer';\r\n\r\nexport const App: FunctionComponent = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navigation />\r\n            <FrontSection />\r\n            <About />\r\n            <Work />\r\n            <Projects />\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n"],"sourceRoot":""}